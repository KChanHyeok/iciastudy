JavaScript

    HTML(문서의 골격), CSS(문서의 모양)
    JS(문서의 동적 제어)

    프로그램 = 명령어의 집합
        = 사용자의 입력을 받아서 처리하고 출력하는 명령어 집합
    
Data(자료)
    프로그램이 처리할 수 있는 모든 것

    Data type(자료형) : Data를 크기로 분류해 놓은 것
        - 숫자형(Number)
        - 문자형(String)
        - 진리형(Boolean)
        - 정의되지 않음(Undefined)
        - 없음(Null)

-> 변수를 만들때 사용!
변수란? 데이터를 저장하는 공간에 이름을 붙인것.
이름을 붙이는 이유 -> 저장한 데이터를 불러오는데
            편하게 사용하기 위해서.(사람을 위한..)

변수 사용 용도
1. 사용자의 입력값 저장
2. 계산 결과를 저장
3. 제어해야 하는 요소의 저장
4. 제어 조건의 저장
등등...



컴퓨터의 단위 
    비트(bit) - 2진수 1자리의 값을 
              저장할 수 있는 공간.
        -> 컴퓨터의 최소 단위.
    바이트(byte) - 8개의 비트로 구성된 단위
        -> Data의 최소 단위.
    
변수명(식별자) 작성 규칙(함수명도 같은 규칙 적용)
- a~z, A~Z, 0~9, '_', '$'만 사용가능
- 숫자로 시작 불가
- 사이에 공백 불가(공백 대신 카멜케이스 사용 권장)
- 키워드 불가(교재 70페이지)
- 대소문자 구분

변수사용법
1. 변수 선언
2. 변수 초기화 또는 데이터(값) 대입
3. 변수 활용(저장한 데이터 활용)

변수 선언
- 변수 선언 키워드 : var, let
  문법) 키워드 변수명;

  var과 let의 차이
  var은 중복 선언이 가능(좋지 않다!)
  let는 중복 선언이 불가(let를 주로 쓰자!)

자바스크립트 작성 위치
1. 인라인 : html 요소의 이벤트 속성(예, onClick 등)에
     직접 작성.
2. 문서 내부 : <script> 태그에 작성.
3. 문서 외부 : xxx.js 파일을 작성하여
    문서에 포함.

함수(function)
    - 한가지 특별한 목적의 작업을 수행하도록
      묶여있는 문장의 집합

변수의 사용 영역(scope)
1. 전역변수(Global Variable) 
    - 함수 밖에서 선언한 변수
2. 지역변수(Local Variable) 
    - 함수안에서 선언한 변수
예제)
1. 버튼을 눌러서 오늘의 날짜 출력하기
2. 버튼을 눌러서 숫자가
   증가/감소하는 카운터 만들기

상수(Const)
  값을 저장하는 공간이지만, 최초에 한번
  값이 저장되며, 그 값을 변경할 수 없는
  공간. 초기화가 반드시 필요함.


변수에 저장된 데이터의 타입을 알고싶다..
-> typeof(표현식)

자바스크립트의 변수는 고정된 타입이 아니기 때문에
사용(살행) 중에 타입에 변경될 수 있음.
때에 따라서 타임을 확인하여 처리할 필요가 있음.

변수(var, let), 상수(const)
데이터 타입(number, string, boolean, undefined, null)
연산자(=, +, -, *, /, %, +=, -=, *=, /=, 비교, ++, -- 등)
제어문(if, switch, for, while)
배열 :  변수의 묶음.

함수 : 한가지 목적을 처리하기 위한 문장(명령어)의 묶음
객체(HTML의 요소 처리)

조건제어문
1. if(조건식) : (만일 ~라면)
    조건식이 참(true)라면 해당 문장을 실행하고
    거짓(false)라면 실행하지 않는다.
    형식
    1) if(조건식) { 실행문장 }
    2) if(조건식) { 실행문장 } else { 다른 실행문장 }
    3) if(조건식1) { 실행문장1 }
        else if(조건식2) { 다른 실행문장2 }
        [
            else if(조건식3) { 실행문장 3 }
            .......
            else { 다른 실행문장 }
        ]


    형식 1의 예) 홀수 만 출력
    if((n % 2) == 1){
      console.log(n);
    }

    else 키워드 : 조건식이 거짓일 때의 실행 문장을
        작성하는 영역을 만드는 키워드.
    
연산자
1. 산술연산자 : +, -, *, /, %

2. 증감연산자 : ++, --

3. 비교연산자 : >, <, >=, <=, ==, !=, ===, !==

4. 논리연산자 : &&, ||, (!)

5. 조건연산자 : (조건식) ? A : B

상황에 따라 처리를 다르게 하는 연산자 : +
    1) 숫자 + 숫자 -> 산술(더하기)
    2) 문자열 + (문자열, 숫자, boolean) -> 문자열로 결합
    




